server {
    listen 80;
    server_name your-aapanel-domain.com; # Replace with your actual domain
    
    # Redirect all HTTP requests to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl http2;
    server_name your-aapanel-domain.com; # Replace with your actual domain

    # SSL Configuration
    ssl_certificate /path/to/your/fullchain.pem;  # Replace with actual path
    ssl_certificate_key /path/to/your/privkey.pem;  # Replace with actual path
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:10m;
    ssl_session_tickets off;
    
    # HSTS (Optional but recommended - comment out if not needed)
    add_header Strict-Transport-Security "max-age=63072000" always;

    # Proxy API requests to Node.js application
    location /api/v1/ {
        proxy_pass http://localhost:8000; # The port your Node app runs on
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }

    # Serve static files if you have any
    location /public/ {
        alias /path/to/your/server/public/; # Replace with actual path
        expires 30d;
        add_header Cache-Control "public, max-age=2592000";
        access_log off;
    }

    # Basic security settings
    location ~ /\.(?!well-known) {
        deny all;
    }

    # Error pages
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
}
